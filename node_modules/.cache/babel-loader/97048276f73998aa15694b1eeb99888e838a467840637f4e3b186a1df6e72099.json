{"ast":null,"code":"var _jsxFileName = \"/Users/egorshestakov/go/interviews/copilot/Food-Ordering-App/food-ordering-app/src/Menu.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport FoodItem from './FoodItem';\n\n// Simulate API configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_CONFIG = {\n  baseUrl: 'https://api.foodies.com',\n  endpoints: {\n    menu: '/api/v1/menu',\n    categories: '/api/v1/categories'\n  },\n  timeout: 5000\n};\n\n// Simulate API service\nconst apiService = {\n  async fetchMenu() {\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 800 + Math.random() * 1200));\n\n    // Simulate occasional API failures (5% chance)\n    if (Math.random() < 0.05) {\n      throw new Error('API Error: Unable to fetch menu items');\n    }\n\n    // Simulate API response structure\n    return {\n      success: true,\n      data: [{\n        id: 1,\n        name: 'Margherita Pizza',\n        description: 'Classic pizza with fresh mozzarella and basil.',\n        price: 12.99,\n        image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 2,\n        name: 'Cheeseburger',\n        description: 'Juicy beef patty with cheese, lettuce, and tomato.',\n        price: 10.99,\n        image: 'https://images.unsplash.com/photo-1571091718767-18b5b1457add?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 3,\n        name: 'Caesar Salad',\n        description: 'Crisp romaine lettuce with Caesar dressing and croutons.',\n        price: 8.99,\n        image: 'https://images.unsplash.com/photo-1546793665-c74683f339c1?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 4,\n        name: 'Spaghetti Carbonara',\n        description: 'Pasta with creamy sauce, pancetta, and parmesan.',\n        price: 14.99,\n        image: 'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 5,\n        name: 'Tiramisu',\n        description: 'Classic Italian dessert with coffee and mascarpone.',\n        price: 6.99,\n        image: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 6,\n        name: 'Chicken Tikka Masala',\n        description: 'Tender chicken in a spiced tomato cream sauce.',\n        price: 13.49,\n        image: 'https://images.unsplash.com/photo-1585937421612-70a008356fbe?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 7,\n        name: 'Sushi Platter',\n        description: 'Assorted fresh sushi rolls and nigiri.',\n        price: 18.99,\n        image: 'https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 8,\n        name: 'Vegan Buddha Bowl',\n        description: 'Quinoa, chickpeas, roasted veggies, and tahini dressing.',\n        price: 11.99,\n        image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 9,\n        name: 'Pad Thai',\n        description: 'Rice noodles, shrimp, peanuts, bean sprouts, and lime.',\n        price: 12.49,\n        image: 'https://images.unsplash.com/photo-1559181567-c3190ca9959b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 10,\n        name: 'BBQ Ribs',\n        description: 'Slow-cooked pork ribs with tangy BBQ sauce.',\n        price: 16.99,\n        image: 'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 11,\n        name: 'Greek Salad',\n        description: 'Tomatoes, cucumber, olives, feta, and olive oil.',\n        price: 9.49,\n        image: 'https://images.unsplash.com/photo-1546793665-c74683f339c1?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 12,\n        name: 'Falafel Wrap',\n        description: 'Crispy falafel, hummus, veggies, and tahini in pita.',\n        price: 8.99,\n        image: 'https://images.unsplash.com/photo-1552332386-f8dd00dc2f85?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 13,\n        name: 'Pepperoni Pizza',\n        description: 'Mozzarella, tomato sauce, and spicy pepperoni.',\n        price: 13.99,\n        image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 14,\n        name: 'Fish & Chips',\n        description: 'Crispy battered fish with fries and tartar sauce.',\n        price: 15.49,\n        image: 'https://images.unsplash.com/photo-1546833999-b9f581a1996d?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 15,\n        name: 'Egg Fried Rice',\n        description: 'Wok-fried rice with eggs, peas, and carrots.',\n        price: 7.99,\n        image: 'https://images.unsplash.com/photo-1550547660-7a46a7cb9f9b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 16,\n        name: 'Buffalo Wings',\n        description: 'Spicy chicken wings served with blue cheese dip.',\n        price: 10.49,\n        image: 'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 17,\n        name: 'Miso Soup',\n        description: 'Traditional Japanese soup with tofu and seaweed.',\n        price: 4.99,\n        image: 'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 18,\n        name: 'Avocado Toast',\n        description: 'Sourdough toast topped with smashed avocado and seeds.',\n        price: 7.49,\n        image: 'https://images.unsplash.com/photo-1541519227354-08fa5d50c44d?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 19,\n        name: 'Pancake Stack',\n        description: 'Fluffy pancakes with maple syrup and berries.',\n        price: 9.99,\n        image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 20,\n        name: 'Chocolate Lava Cake',\n        description: 'Warm chocolate cake with a gooey molten center.',\n        price: 6.49,\n        image: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 21,\n        name: 'Chicken Alfredo',\n        description: 'Fettuccine pasta tossed in creamy Alfredo sauce with grilled chicken.',\n        price: 14.49,\n        image: 'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 22,\n        name: 'Beef Tacos',\n        description: 'Soft tortillas filled with seasoned beef, salsa, and cheese.',\n        price: 9.99,\n        image: 'https://images.unsplash.com/photo-1552332386-f8dd00dc2f85?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 23,\n        name: 'Veggie Burger',\n        description: 'Plant-based patty with avocado, lettuce, tomato, and vegan mayo.',\n        price: 11.49,\n        image: 'https://images.unsplash.com/photo-1571091718767-18b5b1457add?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 24,\n        name: 'Pho Bo',\n        description: 'Vietnamese beef noodle soup with herbs and lime.',\n        price: 12.99,\n        image: 'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 25,\n        name: 'Ramen Bowl',\n        description: 'Rich pork broth, noodles, chashu, egg, and scallions.',\n        price: 13.99,\n        image: 'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 26,\n        name: 'Shrimp Scampi',\n        description: 'Garlic butter shrimp served over linguine pasta.',\n        price: 15.99,\n        image: 'https://images.unsplash.com/photo-1553621042-f6e147245754?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 27,\n        name: 'Greek Gyro',\n        description: 'Pita stuffed with seasoned meat, tomatoes, onions, and tzatziki.',\n        price: 10.49,\n        image: 'https://images.unsplash.com/photo-1590845947670-c009801ffa74?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 28,\n        name: 'Caprese Salad',\n        description: 'Tomatoes, fresh mozzarella, basil, and balsamic glaze.',\n        price: 8.49,\n        image: 'https://images.unsplash.com/photo-1568158879083-c4280a0b9a4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 29,\n        name: 'Butter Chicken',\n        description: 'Creamy tomato-based curry with tender chicken pieces.',\n        price: 14.99,\n        image: 'https://images.unsplash.com/photo-1625944526115-3e2f8c0f3b68?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 30,\n        name: 'Beef Bulgogi',\n        description: 'Korean marinated beef with rice and kimchi.',\n        price: 16.49,\n        image: 'https://images.unsplash.com/photo-1516100882582-96c3a05fe590?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 31,\n        name: 'Poke Bowl',\n        description: 'Fresh tuna, rice, edamame, avocado, and sesame dressing.',\n        price: 13.49,\n        image: 'https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 32,\n        name: 'Quattro Formaggi Pizza',\n        description: 'Four-cheese blend on a crispy thin crust.',\n        price: 14.99,\n        image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 33,\n        name: 'Nasi Goreng',\n        description: 'Indonesian fried rice with chicken and fried egg.',\n        price: 11.99,\n        image: 'https://images.unsplash.com/photo-1550547660-7a46a7cb9f9b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 34,\n        name: 'Burrito Bowl',\n        description: 'Rice, beans, grilled chicken, salsa, and guacamole.',\n        price: 12.49,\n        image: 'https://images.unsplash.com/photo-1552332386-0f52f88f1e4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 35,\n        name: 'Clam Chowder',\n        description: 'Creamy New England-style clam chowder with potatoes.',\n        price: 7.99,\n        image: 'https://images.unsplash.com/photo-1544025162-4f1f2e0a3f4a?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 36,\n        name: 'Chicken Caesar Wrap',\n        description: 'Grilled chicken, romaine, parmesan, and Caesar dressing in a wrap.',\n        price: 9.99,\n        image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 37,\n        name: 'Penne Arrabbiata',\n        description: 'Spicy tomato sauce with garlic and chili on penne pasta.',\n        price: 11.49,\n        image: 'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 38,\n        name: 'BBQ Chicken Pizza',\n        description: 'Tangy BBQ sauce, grilled chicken, onions, and cilantro.',\n        price: 13.99,\n        image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 39,\n        name: 'Spinach Artichoke Dip',\n        description: 'Creamy spinach and artichoke dip served with tortilla chips.',\n        price: 8.49,\n        image: 'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80'\n      }, {\n        id: 40,\n        name: 'Cheesecake',\n        description: 'Rich and creamy cheesecake with a graham cracker crust.',\n        price: 6.99,\n        image: 'https://images.unsplash.com/photo-1541782814454-8b6b5d53f1b9?auto=format&fit=crop&w=400&q=80'\n      }],\n      meta: {\n        total: 40,\n        page: 1,\n        limit: 40,\n        timestamp: new Date().toISOString()\n      }\n    };\n  }\n};\n\n// Custom hook for API calls\nconst useApi = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiService.fetchMenu();\n      if (response.success) {\n        setData(response.data);\n      } else {\n        throw new Error('Failed to fetch menu items');\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('API Error:', err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchData\n  };\n};\n_s(useApi, \"ZHx59QRL3eKQs4TZvu3A8BN+Fpo=\");\nconst Menu = () => {\n  _s2();\n  const {\n    data: items,\n    loading,\n    error,\n    refetch\n  } = useApi();\n  useEffect(() => {\n    refetch();\n  }, []); // Empty dependency array - only run once on mount\n\n  // Enhanced loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fetching fresh menu items from our kitchen...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"API: \", API_CONFIG.baseUrl, API_CONFIG.endpoints.menu]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state with retry functionality\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Oops! Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refetch,\n          className: \"retry-button\",\n          children: \"\\uD83D\\uDD04 Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"API: \", API_CONFIG.baseUrl, API_CONFIG.endpoints.menu]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fresh items from our kitchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refetch,\n        className: \"refresh-button\",\n        children: \"\\uD83D\\uDD04 Refresh Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-items\",\n      children: items === null || items === void 0 ? void 0 : items.map(item => /*#__PURE__*/_jsxDEV(FoodItem, {\n        name: item.name,\n        description: item.description,\n        price: item.price,\n        image: item.image\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n};\n_s2(Menu, \"dxdgiEy/UDxlg1vKcjTZDhx0ouM=\", false, function () {\n  return [useApi];\n});\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","FoodItem","jsxDEV","_jsxDEV","API_CONFIG","baseUrl","endpoints","menu","categories","timeout","apiService","fetchMenu","Promise","resolve","setTimeout","Math","random","Error","success","data","id","name","description","price","image","meta","total","page","limit","timestamp","Date","toISOString","useApi","_s","setData","loading","setLoading","error","setError","fetchData","response","err","message","console","refetch","Menu","_s2","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","_c","$RefreshReg$"],"sources":["/Users/egorshestakov/go/interviews/copilot/Food-Ordering-App/food-ordering-app/src/Menu.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport FoodItem from './FoodItem';\n\n// Simulate API configuration\nconst API_CONFIG = {\n  baseUrl: 'https://api.foodies.com',\n  endpoints: {\n    menu: '/api/v1/menu',\n    categories: '/api/v1/categories'\n  },\n  timeout: 5000\n};\n\n// Simulate API service\nconst apiService = {\n  async fetchMenu() {\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 800 + Math.random() * 1200));\n    \n    // Simulate occasional API failures (5% chance)\n    if (Math.random() < 0.05) {\n      throw new Error('API Error: Unable to fetch menu items');\n    }\n    \n    // Simulate API response structure\n    return {\n      success: true,\n      data: [\n        {\n          id: 1,\n          name: 'Margherita Pizza',\n          description: 'Classic pizza with fresh mozzarella and basil.',\n          price: 12.99,\n          image:\n            'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 2,\n          name: 'Cheeseburger',\n          description: 'Juicy beef patty with cheese, lettuce, and tomato.',\n          price: 10.99,\n          image:\n            'https://images.unsplash.com/photo-1571091718767-18b5b1457add?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 3,\n          name: 'Caesar Salad',\n          description: 'Crisp romaine lettuce with Caesar dressing and croutons.',\n          price: 8.99,\n          image:\n            'https://images.unsplash.com/photo-1546793665-c74683f339c1?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 4,\n          name: 'Spaghetti Carbonara',\n          description: 'Pasta with creamy sauce, pancetta, and parmesan.',\n          price: 14.99,\n          image:\n            'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 5,\n          name: 'Tiramisu',\n          description: 'Classic Italian dessert with coffee and mascarpone.',\n          price: 6.99,\n          image:\n            'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 6,\n          name: 'Chicken Tikka Masala',\n          description: 'Tender chicken in a spiced tomato cream sauce.',\n          price: 13.49,\n          image:\n            'https://images.unsplash.com/photo-1585937421612-70a008356fbe?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 7,\n          name: 'Sushi Platter',\n          description: 'Assorted fresh sushi rolls and nigiri.',\n          price: 18.99,\n          image:\n            'https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 8,\n          name: 'Vegan Buddha Bowl',\n          description: 'Quinoa, chickpeas, roasted veggies, and tahini dressing.',\n          price: 11.99,\n          image:\n            'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 9,\n          name: 'Pad Thai',\n          description: 'Rice noodles, shrimp, peanuts, bean sprouts, and lime.',\n          price: 12.49,\n          image:\n            'https://images.unsplash.com/photo-1559181567-c3190ca9959b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 10,\n          name: 'BBQ Ribs',\n          description: 'Slow-cooked pork ribs with tangy BBQ sauce.',\n          price: 16.99,\n          image:\n            'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 11,\n          name: 'Greek Salad',\n          description: 'Tomatoes, cucumber, olives, feta, and olive oil.',\n          price: 9.49,\n          image:\n            'https://images.unsplash.com/photo-1546793665-c74683f339c1?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 12,\n          name: 'Falafel Wrap',\n          description: 'Crispy falafel, hummus, veggies, and tahini in pita.',\n          price: 8.99,\n          image:\n            'https://images.unsplash.com/photo-1552332386-f8dd00dc2f85?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 13,\n          name: 'Pepperoni Pizza',\n          description: 'Mozzarella, tomato sauce, and spicy pepperoni.',\n          price: 13.99,\n          image:\n            'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 14,\n          name: 'Fish & Chips',\n          description: 'Crispy battered fish with fries and tartar sauce.',\n          price: 15.49,\n          image:\n            'https://images.unsplash.com/photo-1546833999-b9f581a1996d?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 15,\n          name: 'Egg Fried Rice',\n          description: 'Wok-fried rice with eggs, peas, and carrots.',\n          price: 7.99,\n          image:\n            'https://images.unsplash.com/photo-1550547660-7a46a7cb9f9b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 16,\n          name: 'Buffalo Wings',\n          description: 'Spicy chicken wings served with blue cheese dip.',\n          price: 10.49,\n          image:\n            'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 17,\n          name: 'Miso Soup',\n          description: 'Traditional Japanese soup with tofu and seaweed.',\n          price: 4.99,\n          image:\n            'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 18,\n          name: 'Avocado Toast',\n          description: 'Sourdough toast topped with smashed avocado and seeds.',\n          price: 7.49,\n          image:\n            'https://images.unsplash.com/photo-1541519227354-08fa5d50c44d?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 19,\n          name: 'Pancake Stack',\n          description: 'Fluffy pancakes with maple syrup and berries.',\n          price: 9.99,\n          image:\n            'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 20,\n          name: 'Chocolate Lava Cake',\n          description: 'Warm chocolate cake with a gooey molten center.',\n          price: 6.49,\n          image:\n            'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 21,\n          name: 'Chicken Alfredo',\n          description: 'Fettuccine pasta tossed in creamy Alfredo sauce with grilled chicken.',\n          price: 14.49,\n          image:\n            'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 22,\n          name: 'Beef Tacos',\n          description: 'Soft tortillas filled with seasoned beef, salsa, and cheese.',\n          price: 9.99,\n          image:\n            'https://images.unsplash.com/photo-1552332386-f8dd00dc2f85?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 23,\n          name: 'Veggie Burger',\n          description: 'Plant-based patty with avocado, lettuce, tomato, and vegan mayo.',\n          price: 11.49,\n          image:\n            'https://images.unsplash.com/photo-1571091718767-18b5b1457add?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 24,\n          name: 'Pho Bo',\n          description: 'Vietnamese beef noodle soup with herbs and lime.',\n          price: 12.99,\n          image:\n            'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 25,\n          name: 'Ramen Bowl',\n          description: 'Rich pork broth, noodles, chashu, egg, and scallions.',\n          price: 13.99,\n          image:\n            'https://images.unsplash.com/photo-1604908813178-12f3e8c27bb8?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 26,\n          name: 'Shrimp Scampi',\n          description: 'Garlic butter shrimp served over linguine pasta.',\n          price: 15.99,\n          image:\n            'https://images.unsplash.com/photo-1553621042-f6e147245754?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 27,\n          name: 'Greek Gyro',\n          description: 'Pita stuffed with seasoned meat, tomatoes, onions, and tzatziki.',\n          price: 10.49,\n          image:\n            'https://images.unsplash.com/photo-1590845947670-c009801ffa74?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 28,\n          name: 'Caprese Salad',\n          description: 'Tomatoes, fresh mozzarella, basil, and balsamic glaze.',\n          price: 8.49,\n          image:\n            'https://images.unsplash.com/photo-1568158879083-c4280a0b9a4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 29,\n          name: 'Butter Chicken',\n          description: 'Creamy tomato-based curry with tender chicken pieces.',\n          price: 14.99,\n          image:\n            'https://images.unsplash.com/photo-1625944526115-3e2f8c0f3b68?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 30,\n          name: 'Beef Bulgogi',\n          description: 'Korean marinated beef with rice and kimchi.',\n          price: 16.49,\n          image:\n            'https://images.unsplash.com/photo-1516100882582-96c3a05fe590?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 31,\n          name: 'Poke Bowl',\n          description: 'Fresh tuna, rice, edamame, avocado, and sesame dressing.',\n          price: 13.49,\n          image:\n            'https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 32,\n          name: 'Quattro Formaggi Pizza',\n          description: 'Four-cheese blend on a crispy thin crust.',\n          price: 14.99,\n          image:\n            'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 33,\n          name: 'Nasi Goreng',\n          description: 'Indonesian fried rice with chicken and fried egg.',\n          price: 11.99,\n          image:\n            'https://images.unsplash.com/photo-1550547660-7a46a7cb9f9b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 34,\n          name: 'Burrito Bowl',\n          description: 'Rice, beans, grilled chicken, salsa, and guacamole.',\n          price: 12.49,\n          image:\n            'https://images.unsplash.com/photo-1552332386-0f52f88f1e4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 35,\n          name: 'Clam Chowder',\n          description: 'Creamy New England-style clam chowder with potatoes.',\n          price: 7.99,\n          image:\n            'https://images.unsplash.com/photo-1544025162-4f1f2e0a3f4a?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 36,\n          name: 'Chicken Caesar Wrap',\n          description: 'Grilled chicken, romaine, parmesan, and Caesar dressing in a wrap.',\n          price: 9.99,\n          image:\n            'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 37,\n          name: 'Penne Arrabbiata',\n          description: 'Spicy tomato sauce with garlic and chili on penne pasta.',\n          price: 11.49,\n          image:\n            'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 38,\n          name: 'BBQ Chicken Pizza',\n          description: 'Tangy BBQ sauce, grilled chicken, onions, and cilantro.',\n          price: 13.99,\n          image:\n            'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 39,\n          name: 'Spinach Artichoke Dip',\n          description: 'Creamy spinach and artichoke dip served with tortilla chips.',\n          price: 8.49,\n          image:\n            'https://images.unsplash.com/photo-1544025162-d76694265947?auto=format&fit=crop&w=400&q=80',\n        },\n        {\n          id: 40,\n          name: 'Cheesecake',\n          description: 'Rich and creamy cheesecake with a graham cracker crust.',\n          price: 6.99,\n          image:\n            'https://images.unsplash.com/photo-1541782814454-8b6b5d53f1b9?auto=format&fit=crop&w=400&q=80',\n        },\n      ],\n      meta: {\n        total: 40,\n        page: 1,\n        limit: 40,\n        timestamp: new Date().toISOString()\n      }\n    };\n  }\n};\n\n// Custom hook for API calls\nconst useApi = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await apiService.fetchMenu();\n      if (response.success) {\n        setData(response.data);\n      } else {\n        throw new Error('Failed to fetch menu items');\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('API Error:', err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nconst Menu = () => {\n  const { data: items, loading, error, refetch } = useApi();\n\n  useEffect(() => {\n    refetch();\n  }, []); // Empty dependency array - only run once on mount\n\n  // Enhanced loading state\n  if (loading) {\n    return (\n      <div className=\"menu\">\n        <h2>Menu</h2>\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Fetching fresh menu items from our kitchen...</p>\n          <small>API: {API_CONFIG.baseUrl}{API_CONFIG.endpoints.menu}</small>\n        </div>\n      </div>\n    );\n  }\n\n  // Error state with retry functionality\n  if (error) {\n    return (\n      <div className=\"menu\">\n        <h2>Menu</h2>\n        <div className=\"error-container\">\n          <div className=\"error-icon\">⚠️</div>\n          <h3>Oops! Something went wrong</h3>\n          <p>{error}</p>\n          <button onClick={refetch} className=\"retry-button\">\n            🔄 Try Again\n          </button>\n          <small>API: {API_CONFIG.baseUrl}{API_CONFIG.endpoints.menu}</small>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"menu\">\n      <h2>Menu</h2>\n      <div className=\"menu-header\">\n        <p>Fresh items from our kitchen</p>\n        <button onClick={refetch} className=\"refresh-button\">\n          🔄 Refresh Menu\n        </button>\n      </div>\n      <div className=\"food-items\">\n        {items?.map((item) => (\n          <FoodItem\n            key={item.id}\n            name={item.name}\n            description={item.description}\n            price={item.price}\n            image={item.image}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE,yBAAyB;EAClCC,SAAS,EAAE;IACTC,IAAI,EAAE,cAAc;IACpBC,UAAU,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG;EACjB,MAAMC,SAASA,CAAA,EAAG;IAChB;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;IAE7E;IACA,IAAID,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;IAC1D;;IAEA;IACA,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,CACJ;QACEC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,gDAAgD;QAC7DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,oDAAoD;QACjEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,0DAA0D;QACvEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,qBAAqB;QAC3BC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,qDAAqD;QAClEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,sBAAsB;QAC5BC,WAAW,EAAE,gDAAgD;QAC7DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,wCAAwC;QACrDC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,mBAAmB;QACzBC,WAAW,EAAE,0DAA0D;QACvEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,wDAAwD;QACrEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,6CAA6C;QAC1DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,aAAa;QACnBC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,sDAAsD;QACnEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,iBAAiB;QACvBC,WAAW,EAAE,gDAAgD;QAC7DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,mDAAmD;QAChEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,gBAAgB;QACtBC,WAAW,EAAE,8CAA8C;QAC3DC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,WAAW;QACjBC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,wDAAwD;QACrEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,+CAA+C;QAC5DC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,qBAAqB;QAC3BC,WAAW,EAAE,iDAAiD;QAC9DC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,iBAAiB;QACvBC,WAAW,EAAE,uEAAuE;QACpFC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,YAAY;QAClBC,WAAW,EAAE,8DAA8D;QAC3EC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,kEAAkE;QAC/EC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,QAAQ;QACdC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,YAAY;QAClBC,WAAW,EAAE,uDAAuD;QACpEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,kDAAkD;QAC/DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,YAAY;QAClBC,WAAW,EAAE,kEAAkE;QAC/EC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAE,wDAAwD;QACrEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,gBAAgB;QACtBC,WAAW,EAAE,uDAAuD;QACpEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,6CAA6C;QAC1DC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,WAAW;QACjBC,WAAW,EAAE,0DAA0D;QACvEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,wBAAwB;QAC9BC,WAAW,EAAE,2CAA2C;QACxDC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,aAAa;QACnBC,WAAW,EAAE,mDAAmD;QAChEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,qDAAqD;QAClEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,sDAAsD;QACnEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,qBAAqB;QAC3BC,WAAW,EAAE,oEAAoE;QACjFC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,0DAA0D;QACvEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,mBAAmB;QACzBC,WAAW,EAAE,yDAAyD;QACtEC,KAAK,EAAE,KAAK;QACZC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,uBAAuB;QAC7BC,WAAW,EAAE,8DAA8D;QAC3EC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,EACD;QACEJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,YAAY;QAClBC,WAAW,EAAE,yDAAyD;QACtEC,KAAK,EAAE,IAAI;QACXC,KAAK,EACH;MACJ,CAAC,CACF;MACDC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC;IACF,CAAC;EACH;AACF,CAAC;;AAED;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACd,IAAI,EAAEe,OAAO,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMwC,SAAS,GAAGvC,WAAW,CAAC,YAAY;IACxCoC,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAM9B,UAAU,CAACC,SAAS,CAAC,CAAC;MAC7C,IAAI6B,QAAQ,CAACtB,OAAO,EAAE;QACpBgB,OAAO,CAACM,QAAQ,CAACrB,IAAI,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIF,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;MACrBC,OAAO,CAACN,KAAK,CAAC,YAAY,EAAEI,GAAG,CAACC,OAAO,CAAC;IAC1C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEjB,IAAI;IAAEgB,OAAO;IAAEE,KAAK;IAAEO,OAAO,EAAEL;EAAU,CAAC;AACrD,CAAC;AAACN,EAAA,CAzBID,MAAM;AA2BZ,MAAMa,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjB,MAAM;IAAE3B,IAAI,EAAE4B,KAAK;IAAEZ,OAAO;IAAEE,KAAK;IAAEO;EAAQ,CAAC,GAAGZ,MAAM,CAAC,CAAC;EAEzDlC,SAAS,CAAC,MAAM;IACd8C,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIT,OAAO,EAAE;IACX,oBACEhC,OAAA;MAAK6C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB9C,OAAA;QAAA8C,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACblD,OAAA;QAAK6C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC9C,OAAA;UAAK6C,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvClD,OAAA;UAAA8C,QAAA,EAAG;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpDlD,OAAA;UAAA8C,QAAA,GAAO,OAAK,EAAC7C,UAAU,CAACC,OAAO,EAAED,UAAU,CAACE,SAAS,CAACC,IAAI;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAIhB,KAAK,EAAE;IACT,oBACElC,OAAA;MAAK6C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB9C,OAAA;QAAA8C,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACblD,OAAA;QAAK6C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B9C,OAAA;UAAK6C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpClD,OAAA;UAAA8C,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnClD,OAAA;UAAA8C,QAAA,EAAIZ;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdlD,OAAA;UAAQmD,OAAO,EAAEV,OAAQ;UAACI,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAEnD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAA8C,QAAA,GAAO,OAAK,EAAC7C,UAAU,CAACC,OAAO,EAAED,UAAU,CAACE,SAAS,CAACC,IAAI;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACElD,OAAA;IAAK6C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB9C,OAAA;MAAA8C,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACblD,OAAA;MAAK6C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9C,OAAA;QAAA8C,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnClD,OAAA;QAAQmD,OAAO,EAAEV,OAAQ;QAACI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlD,OAAA;MAAK6C,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,GAAG,CAAEC,IAAI,iBACfrD,OAAA,CAACF,QAAQ;QAEPoB,IAAI,EAAEmC,IAAI,CAACnC,IAAK;QAChBC,WAAW,EAAEkC,IAAI,CAAClC,WAAY;QAC9BC,KAAK,EAAEiC,IAAI,CAACjC,KAAM;QAClBC,KAAK,EAAEgC,IAAI,CAAChC;MAAM,GAJbgC,IAAI,CAACpC,EAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,GAAA,CA7DID,IAAI;EAAA,QACyCb,MAAM;AAAA;AAAAyB,EAAA,GADnDZ,IAAI;AA+DV,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}